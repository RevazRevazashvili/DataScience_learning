{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyP8ngqsKwlkIISnXXH4Wv+J",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/revaza05/DataScience_learning/blob/master/Linear_Regresion1\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "id": "YSHO6g5NNP1a"
      },
      "outputs": [],
      "source": [
        "import numpy as np"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "q6RQeUVrNdqb"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# load data from sequence_for_L_Regresion.csv file\n",
        "data = np.genfromtxt('sequence_for_L_Regresion.csv').reshape(2,50)"
      ],
      "metadata": {
        "id": "1OQAKuTUNikV"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# define x and y and give them values\n",
        "x = data[0,:]\n",
        "y = data[1,:]"
      ],
      "metadata": {
        "id": "vQ1vswiLTppr"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(x,y)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 430
        },
        "id": "07MSFawVUC7N",
        "outputId": "5c3c68d0-115e-4e77-ff07-885dbe53a314"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# generating regresion coeficients\n",
        "poly_1 = np.polyfit(x,y,1)\n",
        "poly_1  # this array represents coeficients"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2EmAV537VfWp",
        "outputId": "3763eff9-969a-43f4-d882-795a56f1d707"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([-0.11787609,  6.66266202])"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "poly_1 = np.poly1d(poly_1)\n",
        "poly_1.c"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pzWWCzbZWR8Y",
        "outputId": "5aaf5909-8398-4c2e-bca6-37c63d6c9d16"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([-0.11787609,  6.66266202])"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "yhat_1 = poly_1(x)"
      ],
      "metadata": {
        "id": "MR5kySeeW1GE"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(x,y)\n",
        "\n",
        "plt.scatter(x,yhat_1)\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 430
        },
        "id": "s9vsvhKZXDwS",
        "outputId": "634e5af5-8a18-477d-c385-3742258f3a23"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "\n",
        "# Residuals\n",
        "\n"
      ],
      "metadata": {
        "id": "AnCSpC7r_gHV"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# RSS\n",
        "# for coeficient optimisation B0, B1\n",
        "rss = round(np.power(y-yhat_1,2).sum(),3)  # მიღებული ჯამი გამოხატავს ცდომილბას, თუ ეს რიცხვი პატარაა ე.ი. კარგი მოდელი ააგო"
      ],
      "metadata": {
        "id": "J1l-ZmYf8un4"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# MSS\n",
        "# for coeficient optimisation B0, B1\n",
        "mss = round(np.power(y-yhat_1,2).mean(),3)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WWkQAerD-BRs",
        "outputId": "17a7cea1-03b5-4f89-ecc7-f66d8de90e71"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "6.745"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# TSS\n",
        "# for coeficient optimisation B0, B1\n",
        "tss = round(np.power(y-y.mean(),2).sum(),3)"
      ],
      "metadata": {
        "id": "YhM3ZdQh-YPI"
      },
      "execution_count": 26,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# R2\n",
        "1-(rss/tss)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5aj1qnIS-36E",
        "outputId": "420f5ff5-01c9-4d09-b468-6eaf7a6aad95"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.014611698708584031"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    }
  ]
}